// การอ้างอิง
// การอ้างอิงด้ายการใช้ &mut เช่นนี้ เวลาที่คุณจะกำหนดค่าใหม่ให้มัน ให้ใช้ตัวดำเนินการ *

// ในการกลับกัน คุณก็สามารถสำเนาค่านั้นออกมาด้วยตัวดำเนินกาารเดียวกัน * (ซึ่งขึ้นอยู่ด้วยว่าค่านั้นยอมให้ทำสำเนาได้หรือไม่ - ไว้เราจะไปคุยกันเรื่อง type ที่ยอมให้สำเนาได้อีกทีในภายหลัง)

fn main() {
    let mut foo = 42;
    let f = &mut foo;
    let bar = *f; // get a copy of the owner's value
    *f = 13;      // set the reference's owner's value
    println!("{}", bar);
    println!("{}", foo);
}

